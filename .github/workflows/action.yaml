name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  terraform_ci:
    name: CI - Terraform Plan
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[destroy]')"  # Executar CI se a mensagem do commit não contiver [destroy]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: AWS Login
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Ajuste para a sua região da AWS

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0  # Ajuste para a versão desejada do Terraform

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./

    - name: Plan Terraform Changes
      run: terraform plan -var-file="prod.tfvars" -out=tfplan
      working-directory: ./

  terraform_cd:  
    name: CD - Terraform Apply
    environment: prod
    runs-on: ubuntu-latest
    needs: terraform_ci
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: AWS Login
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Ajuste para a sua região da AWS

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0  # Ajuste para a versão desejada do Terraform
    - name: Initialize Terraform
      run: terraform init
      working-directory: ./

    - name: Plan Terraform Changes
      run: terraform plan -var-file="prod.tfvars" -out=tfplan
      working-directory: ./            

    - name: Apply Terraform Changes
      run: terraform apply tfplan
      working-directory: ./

  terraform_destroy:
    name: Destroy - Terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: AWS Login
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Ajuste para a sua região da AWS

    - name: Check Commit Message for [destroy]
      id: check_commit
      run: echo ::set-output name=DESTROY::$(if echo "${{ github.event.head_commit.message }}" | grep -q "\[destroy\]"; then echo "true"; else echo "false"; fi)
    
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0  # Ajuste para a versão desejada do Terraform
    - name: Initialize Terraform
      run: terraform init
      working-directory: ./      

    - name: Terraform Destroy
      if: steps.check_commit.outputs.DESTROY == 'true'
      run: terraform destroy -var-file="prod.tfvars" -auto-approve
      working-directory: ./   