name: Terraform Pipeline

on:
  push:
    branches:
      - feature/*
      - main

jobs:
  terraform_plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'  # Executar somente na branch "dev"

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: AWS Login
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Ajuste para a sua região da AWS

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0  # Ajuste para a versão desejada do Terraform

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./

    - name: Plan Terraform Changes
      run: terraform plan -var-file="prod.tfvars" -out=tfplan
      working-directory: ./

  terraform_apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Executar somente na branch "main"

    needs: terraform_plan  # Aguardar a conclusão do "terraform_plan" antes de iniciar

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: AWS Login
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  # Ajuste para a sua região da AWS

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0  # Ajuste para a versão desejada do Terraform

    - name: Apply Terraform Changes
      run: terraform apply tfplan
      working-directory: ./